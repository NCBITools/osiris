===============================================================
< fourier.h > [original]
===============================================================
< fparser.h > [original]
===============================================================
< lm_lsqr.h > [original]
===============================================================
< plotctrl.h > [original]
18d17
< #include "wx/window.h"
26,28d24
< // DJH 1/9/14 added because of error messages
< // error: variable 'wxClientDC dc' has initializer but incomplete type
< #include "wx/dcclient.h"
81c77
< #define CURSOR_GRAB (wxStockCursor)(wxCURSOR_MAX+100)  // A hand cursor with fingers closed
---
> #define CURSOR_GRAB (wxCURSOR_MAX+100)  // A hand cursor with fingers closed
533,534c529
<     void SetAreaMouseCursor(wxStockCursor cursorid);
<     // DJH 9/3/15 changed parameter from int to wxStockCursor
---
>     void SetAreaMouseCursor(int cursorid);
761d755
<     virtual bool RenderScrollbars();
764,766c758
<     //
<     //  DJH 2/29/2009 - added bAutoCalcTicks = false
<     void DrawWholePlot( wxDC *dc, const wxRect &boundingRect, double dpi = 72, bool bAutoCalcTicks = false );
---
>     void DrawWholePlot( wxDC *dc, const wxRect &boundingRect, double dpi = 72 );
971,972c963
<     void SetPlotWinMouseCursor(wxStockCursor cursorid);
<     // DJH 9/3/15 changed parameter from int to wxStockCursor
---
>     void SetPlotWinMouseCursor(int cursorid);
===============================================================
< plotcurv.h > [original]
46c46
< // WX_DEFINE_USER_EXPORTED_ARRAY_DOUBLE(double, wxArrayDouble, class WXDLLIMPEXP_PLOTCTRL);
---
> WX_DEFINE_USER_EXPORTED_ARRAY_DOUBLE(double, wxArrayDouble, class WXDLLIMPEXP_PLOTCTRL);
===============================================================
< plotdata.h > [original]
===============================================================
< plotdefs.h > [original]
7c7
< // RCS-ID:      $Id: plotdefs.h,v 1.3 2009/06/08 20:53:44 hoffman Exp $
---
> // RCS-ID:      $Id: plotdefs.h,v 1.3 2006/03/20 03:29:21 jrl1 Exp $
50,76c50,51
< //
< //  wxPrintf is deprecated - DJH 9/3/15
< //
< //inline void PRINT_WXRECT(const wxString& str, const wxRect& r)                 { wxPrintf(wxT("%s xy(%d %d) wh(%d %d) rb(%d %d)\n"), str.utf8_str(), r.x,   r.y,   r.width,   r.height,   r.GetRight(), r.GetBottom()); }
< //inline void PRINT_WXRECT2DDOUBLE(const wxString& str, const wxRect2DDouble& r) { wxPrintf(wxT("%s xy(%g %g) wh(%g %g) rb(%g %g)\n"), str.utf8_str(), r.m_x, r.m_y, r.m_width, r.m_height, r.GetRight(), r.GetBottom()); }
< 
< inline void PRINT_WXRECT(const wxString& str, const wxRect& r)
< { 
<   puts
<     (
<      wxString::Format
<      (wxT("%s xy(%d %d) wh(%d %d) rb(%d %d)\n"),
<       str.utf8_str(), r.x,   r.y,   r.width,   r.height,   
<       r.GetRight(), r.GetBottom()).ToUTF8()
<      ); 
< }
< inline void PRINT_WXRECT2DDOUBLE(const wxString& str, const wxRect2DDouble& r)
< {
<   puts
<     (
<      wxString::Format
<      (wxT("%s xy(%g %g) wh(%g %g) rb(%g %g)\n"),
<       str.utf8_str(), r.m_x, r.m_y, r.m_width, r.m_height, 
<       r.GetRight(), r.GetBottom()).ToUTF8()
<      );
< }
< 
---
> inline void PRINT_WXRECT(const wxString& str, const wxRect& r)                 { wxPrintf(wxT("%s xy(%d %d) wh(%d %d) rb(%d %d)\n"), str.c_str(), r.x,   r.y,   r.width,   r.height,   r.GetRight(), r.GetBottom()); }
> inline void PRINT_WXRECT2DDOUBLE(const wxString& str, const wxRect2DDouble& r) { wxPrintf(wxT("%s xy(%g %g) wh(%g %g) rb(%g %g)\n"), str.c_str(), r.m_x, r.m_y, r.m_width, r.m_height, r.GetRight(), r.GetBottom()); }
85c60
<     #define wxPLOTCTRL_FAST_GRAPHICS 0 // DJH 7/11/14 - would not compile so it is turned off
---
>     #define wxPLOTCTRL_FAST_GRAPHICS 1
===============================================================
< plotdraw.h > [original]
===============================================================
< plotfunc.h > [original]
===============================================================
< plotmark.h > [original]
===============================================================
< plotprnt.h > [original]
===============================================================
